[project]
name = "vohrad"
version = "0.1.0"
description = "Default template for PDM package"
authors = [{ name = "Amine Abbouti", email = "example@email.com" }]
requires-python = "==3.13.*"
readme = "README.md"
license = { text = "MIT" }
# prerequisites = ["python>=3.13", "pdm>=2.13.0"]
dependencies = [
    "fastapi>=0.111.0",         # for web framework
    "uvicorn>=0.29.0",          # for ASGI server
    "pydantic[email]>=2.11.7",  # for data validation
    "psycopg2-binary>=2.9.9",   # for PostgreSQL (sync fallback)
    "SQLAlchemy>=2.0.28",       # for ORM
    "alembic>=1.13.1",          # for database migrations
    "typeguard>=4.1.5",         # for type checking
    "typer>=0.12.3",            # for CLI
    "pydantic-settings>=2.2.1", # for settings management
    "PyYAML>=6.0",              # for YAML configuration files
    "requests>=2.32.5",
    "aiosqlite>=0.21.0",
    "cryptography>=45.0.6",
    "faker>=37.5.3",
    "httpx>=0.28.1",
    "PyJWT>=2.10.1",
    "passlib[bcrypt]>=1.7.4",
    "bcrypt<4.1.0,>=4.0.1",
    "rich>=14.1.0",
    "inquirer>=3.4.1",
    "annotated-types>=0.7.0",
    "asyncpg>=0.30.0",
    "odata-query>=0.10.0",
    "bleach>=6.2.0",
    "slowapi>=0.1.9",
    "python-multipart>=0.0.20",
]

[dependency-groups]
dev = [
    "ruff>=0.12.10",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0",
    "httpx>=0.28.1",
    "pre-commit>=4.3.0",
    "autopep8>=2.3.2",
    "bandit[toml]>=1.8.6",
    "pip-audit>=2.9.0",
    "types-bleach>=6.2.0.20250809",
]

[tool.autopep8]
max_line_length = 120
ignore = ["E302", "E305"]
aggressive = 2

[tool.pdm]
distribution = true
package-dir = "src"

[[tool.pdm.source]]
name = "pypi"
url = "https://pypi.org/simple"
verify_ssl = true

[tool.pdm.scripts]
start = "uvicorn main:app --reload --app-dir ./src --host 0.0.0.0 --port 8000"
manage = "python ./management/manage.py"

# Security commands
validate-keys = "python management/manage.py security validate-keys"
generate-secret = "python management/manage.py security generate-secret"
generate-encryption-key = "python management/manage.py security generate-encryption-key"
generate-jwt-keys = "python management/manage.py security generate-jwt-keys"
seed-global-roles = "python management/manage.py security seed-global-roles"
seed-tenant-roles = "python management/manage.py security seed-tenant-roles"

# Permission registry CLI
perm-registry = "python management/manage.py security perm-registry"

# Tenant commands  
create-tenant = "python management/manage.py tenant create_tenant"

# User commands
create-user = "python management/manage.py user create-with-role"

# Token commands
create-token = "python management/manage.py security token generate"
revoke-all-tokens = "python management/manage.py security revoke-tokens all"
revoke-tenant-tokens = "python management/manage.py security revoke-tokens tenant"
list-tenants = "python management/manage.py security revoke-tokens list-tenants"

# Security scanning commands
security-scan = "bandit -r src/ -ll"
audit-dependencies = "pip-audit"

[tool.bandit]
exclude_dirs = ["tests", "migrations"]
skips = ["B101", "B601"]
confidence = "medium"
severity = "medium"
